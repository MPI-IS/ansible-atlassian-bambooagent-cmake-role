---
# tasks file for ansible-atlassian-bambooagent-cmake-role


- name: '[CMAKE] Checking that required variables are set'
  fail: msg="{{ item }} is not defined"
  when: not "{{ item }}"
  with_items:
    - cmake_installation
    - bambooagent_user

# checks if cmake is already there
- block:
  - name: '[BAMBOO] checks cmake version on OSX'
    shell: /usr/local/bin/cmake --version || cmake --version || echo 'cmake version 0.0'
    register: cmake_version_output_osx
    when: ansible_distribution=="MacOSX"

  - name: '[BAMBOO] checks cmake version on linux'
    shell: "{{bambooagent_userhome}}/usr/local/{{cmake_installation.subfolder}}/bin/cmake --version || cmake --version || echo 'cmake version 0.0'"
    register: cmake_version_output_linux
    when: ansible_distribution=="Ubuntu"



# Installs cmake
# Declares the cmake capabilities (to port into a role)

#
#
# OSX
#
#
- block:

  #- name: '[CMAKE] install osx - DMG'
  #  include: ../../bamboo-agent-install-dmg/tasks/main.yml
  #  dmg_to_install:
  #    - "{{ cmake_installation }}"
  #  when: "{{ cmake_version_output_osx.stdout_lines[0] | regex_replace('cmake version (.*)$', '\\1') | version_compare('%d.%d' % (cmake_installation.version.major, cmake_installation.version.minor), '<') }}"

  #- name: "[JAVA] Installs CMake from DMG"
  #  import_tasks: ../raffienficiaud.atlassian-bambooagent-install-dmg-role/tasks/main.yml
  #  dmg_to_install: "{{ cmake_installation }}"
  #  when: "{{ cmake_version_output_osx.stdout_lines[0] | regex_replace('cmake version (.*)$', '\\1') | version_compare('%d.%d' % (cmake_installation.version.major, cmake_installation.version.minor), '<') }}"

  - name: "[JAVA] Installs CMake from DMG"
    include_role: 
      name: raffienficiaud.atlassian-bambooagent-install-dmg-role
    vars:
      dmg_to_install: "{{ cmake_installation }}"
    when: "{{ cmake_version_output_osx.stdout_lines[0] | regex_replace('cmake version (.*)$', '\\1') | version_compare('%d.%d' % (cmake_installation.version.major, cmake_installation.version.minor), '<') }}"

  - name: '[BAMBOO] cmake post install'
    file:
       path=/usr/local/bin/
       state=directory

  - name: '[BAMBOO] install osx - postinstall'
    file:
       path=/usr/local/bin/{{item}}
       state=absent
    with_items:
     - cmake
     - ctest
     - cpack
     - ccmake

  - name: '[BAMBOO] cmake post install (2)'
    command: /Applications/CMake.app/Contents/bin/cmake-gui --install

  when: ansible_distribution=="MacOSX"


#
#
# Linux
#
#
- block:
  - name: '[BAMBOO] install linux - prerequisite'
    file:
       path="{{bambooagent_userhome}}/usr/local"
       state=directory
       mode=555

  - name: '[BAMBOO] cmake install linux - prerequisite 2'
    file:
       path="{{bambooagent_userhome}}/usr/local/{{cmake_installation.subfolder}}"
       state=absent

  - name: '[BAMBOO] cmake install linux - installation'
    unarchive:
      src="{{ cmake_installation.file }}"
      dest="{{bambooagent_userhome}}/usr/local"
      copy=yes

  when: "{{ (ansible_distribution=='Ubuntu') and (cmake_version_output_linux.stdout_lines[0] | regex_replace('cmake version (.*)$', '\\1') | version_compare('%d.%d' % (cmake_installation.version.major, cmake_installation.version.minor), '<') ) }}"


#
# REGISTER cmake into bamboo capabilities
#
- name: '[BAMBOO] cmake root dir linux'
  set_fact:
    bamboo_cmake_root_dir_linux: '{{bambooagent_userhome}}/usr/local/{{cmake_installation.subfolder | default() }}/bin/'

- name: '[BAMBOO] cmake root dir osx'
  set_fact:
    bamboo_cmake_root_dir_osx: '/usr/local/bin/'

- name: '[BAMBOO] cmake root dir current platform'
  set_fact:
    bamboo_cmake_root_dir: "{{ (ansible_distribution=='Ubuntu') | ternary(bamboo_cmake_root_dir_linux, bamboo_cmake_root_dir_osx) }}"

- name: '[BAMBOO] register cmake commands'
  set_fact:
    bamboo_capabilities: "{{ bamboo_capabilities | combine({'system.builder.command.' + item:bamboo_cmake_root_dir + item}) }}"
  with_items:
    - cmake
    - ctest
    - cpack

- name: '[BAMBOO] register cmake version'
  set_fact:
    bamboo_capabilities: "{{ bamboo_capabilities | combine({'cmake_version':('%d.%d' % (cmake_installation.version.major, cmake_installation.version.minor))}) }}"
